
" Set default directory tu use XDG paths to keep $HOME clean
set undodir=$XDG_DATA_HOME/vim/undo
set directory=$XDG_DATA_HOME/vim/swap
set backupdir=$XDG_DATA_HOME/vim/backup
set viewdir=$XDG_DATA_HOME/vim/view
set viminfo+='1000,n$XDG_DATA_HOME/vim/viminfo
set runtimepath=$XDG_CONFIG_HOME/vim,$VIMRUNTIME,$XDG_CONFIG_HOME/vim/after
" ############
" # PACKAGES #
" ############

" Automate vim-plug installation
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty('$XDG_DATA_HOME/vim/autoload/plug.vim')
  silent execute '!curl -fLo $XDG_DATA_HOME/vim/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('$XDG_DATA_HOME/vim/plugged')
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'dylanaraps/wal.vim'
Plug 'morhetz/gruvbox'
Plug 'tpope/vim-surround'
"Plug 'psf/black', { 'branch': 'stable' }
Plug 'chrisbra/Colorizer'
call plug#end()
" packages configuration

map <C-n> :NERDTreeToggle<CR> " File navigator
let g:airline_theme='deus' " colored status bar
let g:airline_powerline_fonts = 1
" Use gopls language server as backend for vim-go (gopls must be installed)
let g:go_def_modes='gopls'
let g:go_info_mode='gopls'
" show color on hexcodes
let g:Hexokinase_highlighters = ['background']
let g:Hexokinase_optInPatterns = 'full_hex,rgb,rgba,hsl,hsla'

" ####################
" # EDITOR BEHAVIOUR #
" ####################

" syntax highlightin gin Snakefiles
au BufNewFile,BufRead Snakefile set syntax=snakemake
au BufNewFile,BufRead *.smk set syntax=snakemake

" toggle absolut/hybrid line numbers between i and n modes
set number " show line numbers
set relativenumber

" clipboard
set clipboard=unnamedplus " Shares OS and vim clipboard

" tab indentation behaviour
set tabstop=4 " tabs show as space
set softtabstop=4 " add spaces instead of tab when editing
set shiftwidth=4
set expandtab " tab becomes spaces

" fold behaviour
set foldenable " allows to use code folding
set foldlevelstart=10 " open most folds by default
set foldnestmax=10 " maximum 10 nested folds
nnoremap <space> za " space open/close folds
set foldmethod=indent " fold  based on indentation
" Filetype specific indenting behaviour
filetype on
filetype plugin on
filetype indent on " file type based indentation
autocmd FileType make set noexpandtab shiftwidth=4 softtabstop=0 " real tabs in makefile
" autocmd FileType html,xhtml,css,xml,xslt set shiftwidth=2 softtabstop=2 " fixed indentation for web
autocmd FileType vim,lua,nginx set shiftwidth=2 softtabstop=2 " two space indentation for some files
autocmd FileType css set omnifunc=csscomplete#CompleteCSS " auto-indent braces in CSS
" autocmd FileType xhtml,html set omnifunc=htmlcomplete#CompleteTags " add completion for xHTML

" performance
set lazyredraw " do not redraw screen during macros. makes vim slightly faster
set synmaxcol=128 " limiting syntax highlighting to 128 columns can make vim faster

set nocompatible
set backspace=indent,eol,start

" mouse
set mouse=a

" #############
" # GRAPHICAL #
" #############


" text/bg colors
set t_Co=256
syntax on " enable syntax highlighting
set background=dark    " Setting dark mode
colorscheme gruvbox
" Use schemes autogenerated by pywal
" colorscheme wal
" http://vim.wikia.com/wiki/Fix_syntax_highlighting
syntax sync minlines=500
" hi Normal ctermbg=None 
hi LineNr ctermbg=0
" hi CursorLine ctermbg=236
" highlight SignColumn guibg=None ctermbg=None
highlight CursorLineNR ctermfg=0 ctermbg=blue
" command menu/bar
set showcmd " show last command used in bottom bar
set wildmenu " visual autocomplete menu

" highlighting
set cursorline " highlight current line in file
hi clear CursorLine
augroup CLClear
    autocmd! ColorScheme * hi clear CursorLine
augroup END
hi CursorLineNR ctermbg=NONE ctermfg=white cterm=bold
augroup CLNRSet
    autocmd! ColorScheme * hi CursorLineNR cterm=bold
augroup END
set showmatch " highlight matching ({[]})
set incsearch " Show where the next pattern is as you type it:
set hlsearch " Highlight the last searched pattern:
" hi Search cterm=None ctermbg=4 
" ##################
" # MISC SHORTCUTS #
" ##################

let mapleader="," " leader is comma
let maplocalleader=";"

" #######################
" # NOT NVIM-COMPATIBLE #
" #######################

" set ttymouse=xterm2

" Graphical stuff
set termguicolors
